{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nfunction ICompress() {\n  return React.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    \"data-rmiz-btn-unzoom-icon\": true,\n    fill: \"currentColor\",\n    focusable: \"false\",\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, React.createElement(\"path\", {\n    d: \"M 14.144531 1.148438 L 9 6.292969 L 9 3 L 8 3 L 8 8 L 13 8 L 13 7 L 9.707031 7 L 14.855469 1.851563 Z M 8 8 L 3 8 L 3 9 L 6.292969 9 L 1.148438 14.144531 L 1.851563 14.855469 L 7 9.707031 L 7 13 L 8 13 Z\"\n  }));\n}\nfunction IEnlarge() {\n  return React.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    \"data-rmiz-btn-zoom-icon\": true,\n    fill: \"currentColor\",\n    focusable: \"false\",\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, React.createElement(\"path\", {\n    d: \"M 9 1 L 9 2 L 12.292969 2 L 2 12.292969 L 2 9 L 1 9 L 1 14 L 6 14 L 6 13 L 2.707031 13 L 13 2.707031 L 13 6 L 14 6 L 14 1 Z\"\n  }));\n}\nconst testElType = (type, el) => type === el?.tagName?.toUpperCase?.();\nconst testDiv = el => testElType('DIV', el) || testElType('SPAN', el);\nconst testImg = el => testElType('IMG', el);\nconst testImgLoaded = el => el.complete && el.naturalHeight !== 0;\nconst testSvg = el => testElType('SVG', el);\nconst getScaleToWindow = ({\n  height,\n  offset,\n  width\n}) => {\n  return Math.min((window.innerWidth - offset * 2) / width, (window.innerHeight - offset * 2) / height);\n};\nconst getScaleToWindowMax = ({\n  containerHeight,\n  containerWidth,\n  offset,\n  targetHeight,\n  targetWidth\n}) => {\n  const scale = getScaleToWindow({\n    height: targetHeight,\n    offset,\n    width: targetWidth\n  });\n  const ratio = targetWidth > targetHeight ? targetWidth / containerWidth : targetHeight / containerHeight;\n  return scale > 1 ? ratio : scale * ratio;\n};\nconst getScale = ({\n  containerHeight,\n  containerWidth,\n  hasScalableSrc,\n  offset,\n  targetHeight,\n  targetWidth\n}) => {\n  if (!containerHeight || !containerWidth) {\n    return 1;\n  }\n  return !hasScalableSrc && targetHeight && targetWidth ? getScaleToWindowMax({\n    containerHeight,\n    containerWidth,\n    offset,\n    targetHeight,\n    targetWidth\n  }) : getScaleToWindow({\n    height: containerHeight,\n    offset,\n    width: containerWidth\n  });\n};\nconst URL_REGEX = /url(?:\\(['\"]?)(.*?)(?:['\"]?\\))/;\nconst getImgSrc = imgEl => {\n  if (imgEl) {\n    if (testImg(imgEl)) {\n      return imgEl.currentSrc;\n    } else if (testDiv(imgEl)) {\n      const bgImg = window.getComputedStyle(imgEl).backgroundImage;\n      if (bgImg) {\n        return URL_REGEX.exec(bgImg)?.[1];\n      }\n    }\n  }\n};\nconst getImgAlt = imgEl => {\n  if (imgEl) {\n    if (testImg(imgEl)) {\n      return imgEl.alt ?? undefined;\n    } else {\n      return imgEl.getAttribute('aria-label') ?? undefined;\n    }\n  }\n};\nconst getImgRegularStyle = ({\n  containerHeight,\n  containerLeft,\n  containerTop,\n  containerWidth,\n  hasScalableSrc,\n  offset,\n  targetHeight,\n  targetWidth\n}) => {\n  const scale = getScale({\n    containerHeight,\n    containerWidth,\n    hasScalableSrc,\n    offset,\n    targetHeight,\n    targetWidth\n  });\n  return {\n    top: containerTop,\n    left: containerLeft,\n    width: containerWidth * scale,\n    height: containerHeight * scale,\n    transform: `translate(0,0) scale(${1 / scale})`\n  };\n};\nconst parsePosition = ({\n  position,\n  relativeNum\n}) => {\n  const positionNum = parseFloat(position);\n  return position.endsWith('%') ? relativeNum * positionNum / 100 : positionNum;\n};\nconst getImgObjectFitStyle = ({\n  containerHeight,\n  containerLeft,\n  containerTop,\n  containerWidth,\n  hasScalableSrc,\n  objectFit,\n  objectPosition,\n  offset,\n  targetHeight,\n  targetWidth\n}) => {\n  if (objectFit === 'scale-down') {\n    if (targetWidth <= containerWidth && targetHeight <= containerHeight) {\n      objectFit = 'none';\n    } else {\n      objectFit = 'contain';\n    }\n  }\n  if (objectFit === 'cover' || objectFit === 'contain') {\n    const widthRatio = containerWidth / targetWidth;\n    const heightRatio = containerHeight / targetHeight;\n    const ratio = objectFit === 'cover' ? Math.max(widthRatio, heightRatio) : Math.min(widthRatio, heightRatio);\n    const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth * ratio\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight * ratio\n    });\n    const scale = getScale({\n      containerHeight: targetHeight * ratio,\n      containerWidth: targetWidth * ratio,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * ratio * scale,\n      height: targetHeight * ratio * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  } else if (objectFit === 'none') {\n    const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight\n    });\n    const scale = getScale({\n      containerHeight: targetHeight,\n      containerWidth: targetWidth,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * scale,\n      height: targetHeight * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  } else if (objectFit === 'fill') {\n    const widthRatio = containerWidth / targetWidth;\n    const heightRatio = containerHeight / targetHeight;\n    const ratio = Math.max(widthRatio, heightRatio);\n    const scale = getScale({\n      containerHeight: targetHeight * ratio,\n      containerWidth: targetWidth * ratio,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      width: containerWidth * scale,\n      height: containerHeight * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  } else {\n    return {};\n  }\n};\nconst getDivImgStyle = ({\n  backgroundPosition,\n  backgroundSize,\n  containerHeight,\n  containerLeft,\n  containerTop,\n  containerWidth,\n  hasScalableSrc,\n  offset,\n  targetHeight,\n  targetWidth\n}) => {\n  if (backgroundSize === 'cover' || backgroundSize === 'contain') {\n    const widthRatio = containerWidth / targetWidth;\n    const heightRatio = containerHeight / targetHeight;\n    const ratio = backgroundSize === 'cover' ? Math.max(widthRatio, heightRatio) : Math.min(widthRatio, heightRatio);\n    const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth * ratio\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight * ratio\n    });\n    const scale = getScale({\n      containerHeight: targetHeight * ratio,\n      containerWidth: targetWidth * ratio,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * ratio * scale,\n      height: targetHeight * ratio * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  } else if (backgroundSize === 'auto') {\n    const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight\n    });\n    const scale = getScale({\n      containerHeight: targetHeight,\n      containerWidth: targetWidth,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * scale,\n      height: targetHeight * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  } else {\n    const [sizeW = '50%', sizeH = '50%'] = backgroundSize.split(' ');\n    const sizeWidth = parsePosition({\n      position: sizeW,\n      relativeNum: containerWidth\n    });\n    const sizeHeight = parsePosition({\n      position: sizeH,\n      relativeNum: containerHeight\n    });\n    const widthRatio = sizeWidth / targetWidth;\n    const heightRatio = sizeHeight / targetHeight;\n    const ratio = Math.min(widthRatio, heightRatio);\n    const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n    const posX = parsePosition({\n      position: posLeft,\n      relativeNum: containerWidth - targetWidth * ratio\n    });\n    const posY = parsePosition({\n      position: posTop,\n      relativeNum: containerHeight - targetHeight * ratio\n    });\n    const scale = getScale({\n      containerHeight: targetHeight * ratio,\n      containerWidth: targetWidth * ratio,\n      hasScalableSrc,\n      offset,\n      targetHeight,\n      targetWidth\n    });\n    return {\n      top: containerTop + posY,\n      left: containerLeft + posX,\n      width: targetWidth * ratio * scale,\n      height: targetHeight * ratio * scale,\n      transform: `translate(0,0) scale(${1 / scale})`\n    };\n  }\n};\nconst SRC_SVG_REGEX = /\\.svg$/i;\nconst getStyleModalImg = ({\n  hasZoomImg,\n  imgSrc,\n  isSvg,\n  isZoomed,\n  loadedImgEl,\n  offset,\n  shouldRefresh,\n  targetEl\n}) => {\n  const hasScalableSrc = isSvg || imgSrc?.slice?.(0, 18) === 'data:image/svg+xml' || hasZoomImg || !!(imgSrc && SRC_SVG_REGEX.test(imgSrc));\n  const imgRect = targetEl.getBoundingClientRect();\n  const targetElComputedStyle = window.getComputedStyle(targetEl);\n  const isDivImg = loadedImgEl != null && testDiv(targetEl);\n  const isImgObjectFit = loadedImgEl != null && !isDivImg;\n  const styleImgRegular = getImgRegularStyle({\n    containerHeight: imgRect.height,\n    containerLeft: imgRect.left,\n    containerTop: imgRect.top,\n    containerWidth: imgRect.width,\n    hasScalableSrc,\n    offset,\n    targetHeight: loadedImgEl?.naturalHeight || imgRect.height,\n    targetWidth: loadedImgEl?.naturalWidth || imgRect.width\n  });\n  const styleImgObjectFit = isImgObjectFit ? getImgObjectFitStyle({\n    containerHeight: imgRect.height,\n    containerLeft: imgRect.left,\n    containerTop: imgRect.top,\n    containerWidth: imgRect.width,\n    hasScalableSrc,\n    objectFit: targetElComputedStyle.objectFit,\n    objectPosition: targetElComputedStyle.objectPosition,\n    offset,\n    targetHeight: loadedImgEl?.naturalHeight || imgRect.height,\n    targetWidth: loadedImgEl?.naturalWidth || imgRect.width\n  }) : undefined;\n  const styleDivImg = isDivImg ? getDivImgStyle({\n    backgroundPosition: targetElComputedStyle.backgroundPosition,\n    backgroundSize: targetElComputedStyle.backgroundSize,\n    containerHeight: imgRect.height,\n    containerLeft: imgRect.left,\n    containerTop: imgRect.top,\n    containerWidth: imgRect.width,\n    hasScalableSrc,\n    offset,\n    targetHeight: loadedImgEl?.naturalHeight || imgRect.height,\n    targetWidth: loadedImgEl?.naturalWidth || imgRect.width\n  }) : undefined;\n  const style = Object.assign({}, styleImgRegular, styleImgObjectFit, styleDivImg);\n  if (isZoomed) {\n    const viewportX = window.innerWidth / 2;\n    const viewportY = window.innerHeight / 2;\n    const childCenterX = parseFloat(String(style.left || 0)) + parseFloat(String(style.width || 0)) / 2;\n    const childCenterY = parseFloat(String(style.top || 0)) + parseFloat(String(style.height || 0)) / 2;\n    const translateX = viewportX - childCenterX;\n    const translateY = viewportY - childCenterY;\n    if (shouldRefresh) {\n      style.transitionDuration = '0.01ms';\n    }\n    style.transform = `translate(${translateX}px,${translateY}px) scale(1)`;\n  }\n  return style;\n};\nconst getStyleGhost = imgEl => {\n  if (!imgEl) {\n    return {};\n  }\n  if (testSvg(imgEl)) {\n    const parentEl = imgEl.parentElement;\n    const rect = imgEl.getBoundingClientRect();\n    if (parentEl) {\n      const parentRect = parentEl.getBoundingClientRect();\n      return {\n        height: rect.height,\n        left: parentRect.left - rect.left,\n        top: parentRect.top - rect.top,\n        width: rect.width\n      };\n    } else {\n      return {\n        height: rect.height,\n        left: rect.left,\n        width: rect.width,\n        top: rect.top\n      };\n    }\n  } else {\n    return {\n      height: imgEl.offsetHeight,\n      left: imgEl.offsetLeft,\n      width: imgEl.offsetWidth,\n      top: imgEl.offsetTop\n    };\n  }\n};\nconst adjustSvgIDs = svgEl => {\n  const newIdSuffix = '-zoom';\n  const attrs = ['clip-path', 'fill', 'mask', 'marker-start', 'marker-mid', 'marker-end'];\n  const idMap = new Map();\n  if (svgEl.hasAttribute('id')) {\n    const oldId = svgEl.id;\n    const newId = oldId + newIdSuffix;\n    idMap.set(oldId, newId);\n    svgEl.id = newId;\n  }\n  svgEl.querySelectorAll('[id]').forEach(el => {\n    const oldId = el.id;\n    const newId = oldId + newIdSuffix;\n    idMap.set(oldId, newId);\n    el.id = newId;\n  });\n  idMap.forEach((newId, oldId) => {\n    const urlOldID = `url(#${oldId})`;\n    const urlNewID = `url(#${newId})`;\n    const attrsQuery = attrs.map(attr => `[${attr}=\"${urlOldID}\"]`).join(', ');\n    svgEl.querySelectorAll(attrsQuery).forEach(usedEl => {\n      attrs.forEach(attr => {\n        if (usedEl.getAttribute(attr) === urlOldID) {\n          usedEl.setAttribute(attr, urlNewID);\n        }\n      });\n    });\n  });\n  svgEl.querySelectorAll('style').forEach(styleEl => {\n    idMap.forEach((newId, oldId) => {\n      if (styleEl.textContent) {\n        styleEl.textContent = styleEl.textContent.replaceAll(`#${oldId}`, `#${newId}`);\n      }\n    });\n  });\n};\nconst IMAGE_QUERY = ['img', 'svg', '[role=\"img\"]', '[data-zoom]'].map(x => `${x}:not([aria-hidden=\"true\"])`).join(',');\nconst defaultBodyAttrs = {\n  overflow: '',\n  width: ''\n};\nfunction Controlled(props) {\n  return React.createElement(ControlledBase, {\n    ...props\n  });\n}\nclass ControlledBase extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      id: '',\n      isZoomImgLoaded: false,\n      loadedImgEl: undefined,\n      modalState: \"UNLOADED\",\n      shouldRefresh: false,\n      styleGhost: {}\n    };\n    this.refContent = React.createRef();\n    this.refDialog = React.createRef();\n    this.refModalContent = React.createRef();\n    this.refModalImg = React.createRef();\n    this.refWrap = React.createRef();\n    this.imgEl = null;\n    this.isScaling = false;\n    this.prevBodyAttrs = defaultBodyAttrs;\n    this.styleModalImg = {};\n    this.handleModalStateChange = prevModalState => {\n      const {\n        modalState\n      } = this.state;\n      if (prevModalState !== \"LOADING\" && modalState === \"LOADING\") {\n        this.loadZoomImg();\n        window.addEventListener('resize', this.handleResize, {\n          passive: true\n        });\n        window.addEventListener('touchstart', this.handleTouchStart, {\n          passive: true\n        });\n        window.addEventListener('touchmove', this.handleTouchMove, {\n          passive: true\n        });\n        window.addEventListener('touchend', this.handleTouchEnd, {\n          passive: true\n        });\n        window.addEventListener('touchcancel', this.handleTouchCancel, {\n          passive: true\n        });\n        document.addEventListener('keydown', this.handleKeyDown, true);\n      } else if (prevModalState !== \"LOADED\" && modalState === \"LOADED\") {\n        window.addEventListener('wheel', this.handleWheel, {\n          passive: true\n        });\n      } else if (prevModalState !== \"UNLOADING\" && modalState === \"UNLOADING\") {\n        this.ensureImgTransitionEnd();\n        window.removeEventListener('wheel', this.handleWheel);\n        window.removeEventListener('touchstart', this.handleTouchStart);\n        window.removeEventListener('touchmove', this.handleTouchMove);\n        window.removeEventListener('touchend', this.handleTouchEnd);\n        window.removeEventListener('touchcancel', this.handleTouchCancel);\n        document.removeEventListener('keydown', this.handleKeyDown, true);\n      } else if (prevModalState !== \"UNLOADED\" && modalState === \"UNLOADED\") {\n        this.bodyScrollEnable();\n        window.removeEventListener('resize', this.handleResize);\n        this.refModalImg.current?.removeEventListener?.('transitionend', this.handleImgTransitionEnd);\n        this.refDialog.current?.close?.();\n      }\n    };\n    this.getDialogContainer = () => {\n      let el = document.querySelector('[data-rmiz-portal]');\n      if (el == null) {\n        el = document.createElement('div');\n        el.setAttribute('data-rmiz-portal', '');\n        document.body.appendChild(el);\n      }\n      return el;\n    };\n    this.setId = () => {\n      const gen4 = () => Math.random().toString(16).slice(-4);\n      this.setState({\n        id: gen4() + gen4() + gen4()\n      });\n    };\n    this.setAndTrackImg = () => {\n      const contentEl = this.refContent.current;\n      if (!contentEl) return;\n      this.imgEl = contentEl.querySelector(IMAGE_QUERY);\n      if (this.imgEl) {\n        this.contentNotFoundChangeObserver?.disconnect?.();\n        this.imgEl.addEventListener('load', this.handleImgLoad);\n        this.imgEl.addEventListener('click', this.handleZoom);\n        if (!this.state.loadedImgEl) {\n          this.handleImgLoad();\n        }\n        this.imgElResizeObserver = new ResizeObserver(entries => {\n          const entry = entries[0];\n          if (entry?.target) {\n            this.imgEl = entry.target;\n            this.setState({\n              styleGhost: getStyleGhost(this.imgEl)\n            });\n          }\n        });\n        this.imgElResizeObserver.observe(this.imgEl);\n        if (!this.contentChangeObserver) {\n          this.contentChangeObserver = new MutationObserver(() => {\n            this.setState({\n              styleGhost: getStyleGhost(this.imgEl)\n            });\n          });\n          this.contentChangeObserver.observe(contentEl, {\n            attributes: true,\n            childList: true,\n            subtree: true\n          });\n        }\n      } else if (!this.contentNotFoundChangeObserver) {\n        this.contentNotFoundChangeObserver = new MutationObserver(this.setAndTrackImg);\n        this.contentNotFoundChangeObserver.observe(contentEl, {\n          childList: true,\n          subtree: true\n        });\n      }\n    };\n    this.handleIfZoomChanged = prevIsZoomed => {\n      const {\n        isZoomed\n      } = this.props;\n      if (!prevIsZoomed && isZoomed) {\n        this.zoom();\n      } else if (prevIsZoomed && !isZoomed) {\n        this.unzoom();\n      }\n    };\n    this.handleImgLoad = () => {\n      const imgSrc = getImgSrc(this.imgEl);\n      if (!imgSrc) return;\n      const img = new Image();\n      if (testImg(this.imgEl)) {\n        img.sizes = this.imgEl.sizes;\n        img.srcset = this.imgEl.srcset;\n      }\n      img.src = imgSrc;\n      const setLoaded = () => {\n        this.setState({\n          loadedImgEl: img,\n          styleGhost: getStyleGhost(this.imgEl)\n        });\n      };\n      img.decode().then(setLoaded).catch(() => {\n        if (testImgLoaded(img)) {\n          setLoaded();\n          return;\n        }\n        img.onload = setLoaded;\n      });\n    };\n    this.handleZoom = () => {\n      if (this.hasImage()) {\n        this.props.onZoomChange?.(true);\n      }\n    };\n    this.handleUnzoom = () => {\n      this.props.onZoomChange?.(false);\n    };\n    this.handleDialogCancel = e => {\n      e.preventDefault();\n    };\n    this.handleDialogClick = e => {\n      if (e.target === this.refModalContent.current || e.target === this.refModalImg.current) {\n        this.handleUnzoom();\n      }\n    };\n    this.handleKeyDown = e => {\n      if (e.key === 'Escape' || e.keyCode === 27) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.handleUnzoom();\n      }\n    };\n    this.handleWheel = e => {\n      if (e.ctrlKey) return;\n      e.stopPropagation();\n      queueMicrotask(() => {\n        this.handleUnzoom();\n      });\n    };\n    this.handleTouchStart = e => {\n      if (e.touches.length > 1) {\n        this.isScaling = true;\n        return;\n      }\n      if (e.changedTouches.length === 1 && e.changedTouches[0]) {\n        this.touchYStart = e.changedTouches[0].screenY;\n      }\n    };\n    this.handleTouchMove = e => {\n      const browserScale = window.visualViewport?.scale ?? 1;\n      if (this.props.canSwipeToUnzoom && !this.isScaling && browserScale <= 1 && this.touchYStart != null && e.changedTouches[0]) {\n        this.touchYEnd = e.changedTouches[0].screenY;\n        const max = Math.max(this.touchYStart, this.touchYEnd);\n        const min = Math.min(this.touchYStart, this.touchYEnd);\n        const delta = Math.abs(max - min);\n        if (delta > this.props.swipeToUnzoomThreshold) {\n          this.touchYStart = undefined;\n          this.touchYEnd = undefined;\n          this.handleUnzoom();\n        }\n      }\n    };\n    this.handleTouchEnd = () => {\n      this.isScaling = false;\n      this.touchYStart = undefined;\n      this.touchYEnd = undefined;\n    };\n    this.handleTouchCancel = () => {\n      this.isScaling = false;\n      this.touchYStart = undefined;\n      this.touchYEnd = undefined;\n    };\n    this.handleResize = () => {\n      this.setState({\n        shouldRefresh: true\n      });\n    };\n    this.hasImage = () => {\n      return this.imgEl && (this.state.loadedImgEl || testSvg(this.imgEl)) && window.getComputedStyle(this.imgEl).display !== 'none';\n    };\n    this.zoom = () => {\n      this.bodyScrollDisable();\n      this.refDialog.current?.showModal?.();\n      this.refModalImg.current?.addEventListener?.('transitionend', this.handleImgTransitionEnd);\n      this.setState({\n        modalState: \"LOADING\"\n      });\n    };\n    this.unzoom = () => {\n      this.setState({\n        modalState: \"UNLOADING\"\n      });\n    };\n    this.handleImgTransitionEnd = () => {\n      clearTimeout(this.timeoutTransitionEnd);\n      if (this.state.modalState === \"LOADING\") {\n        this.setState({\n          modalState: \"LOADED\"\n        });\n      } else if (this.state.modalState === \"UNLOADING\") {\n        this.setState({\n          shouldRefresh: false,\n          modalState: \"UNLOADED\"\n        });\n      }\n    };\n    this.ensureImgTransitionEnd = () => {\n      if (this.refModalImg.current) {\n        const td = window.getComputedStyle(this.refModalImg.current).transitionDuration;\n        const tdFloat = parseFloat(td);\n        if (tdFloat) {\n          const tdMs = tdFloat * (td.endsWith('ms') ? 1 : 1000) + 50;\n          this.timeoutTransitionEnd = setTimeout(this.handleImgTransitionEnd, tdMs);\n        }\n      }\n    };\n    this.bodyScrollDisable = () => {\n      this.prevBodyAttrs = {\n        overflow: document.body.style.overflow,\n        width: document.body.style.width\n      };\n      const clientWidth = document.body.clientWidth;\n      document.body.style.overflow = 'hidden';\n      document.body.style.width = `${clientWidth}px`;\n    };\n    this.bodyScrollEnable = () => {\n      document.body.style.width = this.prevBodyAttrs.width;\n      document.body.style.overflow = this.prevBodyAttrs.overflow;\n      this.prevBodyAttrs = defaultBodyAttrs;\n    };\n    this.loadZoomImg = () => {\n      const {\n        props: {\n          zoomImg\n        }\n      } = this;\n      const zoomImgSrc = zoomImg?.src;\n      if (zoomImgSrc) {\n        const img = new Image();\n        img.sizes = zoomImg?.sizes ?? '';\n        img.srcset = zoomImg?.srcSet ?? '';\n        img.src = zoomImgSrc;\n        const setLoaded = () => {\n          this.setState({\n            isZoomImgLoaded: true\n          });\n        };\n        img.decode().then(setLoaded).catch(() => {\n          if (testImgLoaded(img)) {\n            setLoaded();\n            return;\n          }\n          img.onload = setLoaded;\n        });\n      }\n    };\n    this.UNSAFE_handleSvg = () => {\n      const {\n        imgEl,\n        refModalImg,\n        styleModalImg\n      } = this;\n      if (testSvg(imgEl)) {\n        const svgEl = imgEl.cloneNode(true);\n        adjustSvgIDs(svgEl);\n        svgEl.style.width = `${styleModalImg.width || 0}px`;\n        svgEl.style.height = `${styleModalImg.height || 0}px`;\n        svgEl.addEventListener('click', this.handleUnzoom);\n        refModalImg.current?.firstChild?.remove?.();\n        refModalImg.current?.appendChild?.(svgEl);\n      }\n    };\n  }\n  render() {\n    const {\n      handleDialogCancel,\n      handleDialogClick,\n      handleUnzoom,\n      handleZoom,\n      imgEl,\n      props: {\n        a11yNameButtonUnzoom,\n        a11yNameButtonZoom,\n        children,\n        classDialog,\n        IconUnzoom,\n        IconZoom,\n        isZoomed,\n        wrapElement: WrapElement,\n        ZoomContent,\n        zoomImg,\n        zoomMargin\n      },\n      refContent,\n      refDialog,\n      refModalContent,\n      refModalImg,\n      refWrap,\n      state: {\n        id,\n        isZoomImgLoaded,\n        loadedImgEl,\n        modalState,\n        shouldRefresh,\n        styleGhost\n      }\n    } = this;\n    const idModal = `rmiz-modal-${id}`;\n    const idModalImg = `rmiz-modal-img-${id}`;\n    const isDiv = testDiv(imgEl);\n    const isImg = testImg(imgEl);\n    const isSvg = testSvg(imgEl);\n    const imgAlt = getImgAlt(imgEl);\n    const imgSrc = getImgSrc(imgEl);\n    const imgSizes = isImg ? imgEl.sizes : undefined;\n    const imgSrcSet = isImg ? imgEl.srcset : undefined;\n    const hasZoomImg = !!zoomImg?.src;\n    const hasImage = this.hasImage();\n    const labelBtnZoom = imgAlt ? `${a11yNameButtonZoom}: ${imgAlt}` : a11yNameButtonZoom;\n    const isModalActive = modalState === \"LOADING\" || modalState === \"LOADED\";\n    const dataContentState = hasImage ? 'found' : 'not-found';\n    const dataOverlayState = modalState === \"UNLOADED\" || modalState === \"UNLOADING\" ? 'hidden' : 'visible';\n    const styleContent = {\n      visibility: modalState === \"UNLOADED\" ? 'visible' : 'hidden'\n    };\n    this.styleModalImg = hasImage ? getStyleModalImg({\n      hasZoomImg,\n      imgSrc,\n      isSvg,\n      isZoomed: isZoomed && isModalActive,\n      loadedImgEl,\n      offset: zoomMargin,\n      shouldRefresh,\n      targetEl: imgEl\n    }) : {};\n    let modalContent = null;\n    if (hasImage) {\n      const modalImg = isImg || isDiv ? React.createElement(\"img\", {\n        alt: imgAlt,\n        sizes: imgSizes,\n        src: imgSrc,\n        srcSet: imgSrcSet,\n        ...(isZoomImgLoaded && modalState === \"LOADED\" ? zoomImg : {}),\n        \"data-rmiz-modal-img\": \"\",\n        height: this.styleModalImg.height || undefined,\n        id: idModalImg,\n        ref: refModalImg,\n        style: this.styleModalImg,\n        width: this.styleModalImg.width || undefined\n      }) : isSvg ? React.createElement(\"div\", {\n        \"data-rmiz-modal-img\": true,\n        ref: refModalImg,\n        style: this.styleModalImg\n      }) : null;\n      const modalBtnUnzoom = React.createElement(\"button\", {\n        \"aria-label\": a11yNameButtonUnzoom,\n        \"data-rmiz-btn-unzoom\": \"\",\n        onClick: handleUnzoom,\n        type: \"button\"\n      }, React.createElement(IconUnzoom, null));\n      modalContent = ZoomContent ? React.createElement(ZoomContent, {\n        buttonUnzoom: modalBtnUnzoom,\n        modalState: modalState,\n        img: modalImg,\n        onUnzoom: handleUnzoom\n      }) : React.createElement(React.Fragment, null, modalImg, modalBtnUnzoom);\n    }\n    return React.createElement(WrapElement, {\n      \"aria-owns\": idModal,\n      \"data-rmiz\": \"\",\n      ref: refWrap\n    }, React.createElement(WrapElement, {\n      \"data-rmiz-content\": dataContentState,\n      ref: refContent,\n      style: styleContent\n    }, children), hasImage && React.createElement(WrapElement, {\n      \"data-rmiz-ghost\": \"\",\n      style: styleGhost\n    }, React.createElement(\"button\", {\n      \"aria-label\": labelBtnZoom,\n      \"data-rmiz-btn-zoom\": \"\",\n      onClick: handleZoom,\n      type: \"button\"\n    }, React.createElement(IconZoom, null))), hasImage && ReactDOM.createPortal(React.createElement(\"dialog\", {\n      \"aria-labelledby\": idModalImg,\n      \"aria-modal\": \"true\",\n      className: classDialog,\n      \"data-rmiz-modal\": \"\",\n      id: idModal,\n      onClick: handleDialogClick,\n      onClose: handleUnzoom,\n      onCancel: handleDialogCancel,\n      ref: refDialog,\n      role: \"dialog\"\n    }, React.createElement(\"div\", {\n      \"data-rmiz-modal-overlay\": dataOverlayState\n    }), React.createElement(\"div\", {\n      \"data-rmiz-modal-content\": \"\",\n      ref: refModalContent\n    }, modalContent)), this.getDialogContainer()));\n  }\n  componentDidMount() {\n    this.setId();\n    this.setAndTrackImg();\n    this.handleImgLoad();\n    this.UNSAFE_handleSvg();\n  }\n  componentWillUnmount() {\n    if (this.state.modalState !== \"UNLOADED\") {\n      this.bodyScrollEnable();\n    }\n    this.contentChangeObserver?.disconnect?.();\n    this.contentNotFoundChangeObserver?.disconnect?.();\n    this.imgElResizeObserver?.disconnect?.();\n    this.imgEl?.removeEventListener?.('load', this.handleImgLoad);\n    this.imgEl?.removeEventListener?.('click', this.handleZoom);\n    this.refModalImg.current?.removeEventListener?.('transitionend', this.handleImgTransitionEnd);\n    window.removeEventListener('wheel', this.handleWheel);\n    window.removeEventListener('touchstart', this.handleTouchStart);\n    window.removeEventListener('touchmove', this.handleTouchMove);\n    window.removeEventListener('touchend', this.handleTouchEnd);\n    window.removeEventListener('touchcancel', this.handleTouchCancel);\n    window.removeEventListener('resize', this.handleResize);\n    document.removeEventListener('keydown', this.handleKeyDown, true);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    this.handleModalStateChange(prevState.modalState);\n    this.UNSAFE_handleSvg();\n    this.handleIfZoomChanged(prevProps.isZoomed);\n  }\n}\nControlledBase.defaultProps = {\n  a11yNameButtonUnzoom: 'Minimize image',\n  a11yNameButtonZoom: 'Expand image',\n  canSwipeToUnzoom: true,\n  IconUnzoom: ICompress,\n  IconZoom: IEnlarge,\n  swipeToUnzoomThreshold: 10,\n  wrapElement: 'div',\n  zoomMargin: 0\n};\nfunction Uncontrolled(props) {\n  const [isZoomed, setIsZoomed] = React.useState(false);\n  return React.createElement(Controlled, {\n    ...props,\n    isZoomed: isZoomed,\n    onZoomChange: setIsZoomed\n  });\n}\nexport { Controlled, Uncontrolled as default };","map":{"version":3,"names":["React","ReactDOM","ICompress","createElement","fill","focusable","viewBox","xmlns","d","IEnlarge","testElType","type","el","tagName","toUpperCase","testDiv","testImg","testImgLoaded","complete","naturalHeight","testSvg","getScaleToWindow","height","offset","width","Math","min","window","innerWidth","innerHeight","getScaleToWindowMax","containerHeight","containerWidth","targetHeight","targetWidth","scale","ratio","getScale","hasScalableSrc","URL_REGEX","getImgSrc","imgEl","currentSrc","bgImg","getComputedStyle","backgroundImage","exec","getImgAlt","alt","undefined","getAttribute","getImgRegularStyle","containerLeft","containerTop","top","left","transform","parsePosition","position","relativeNum","positionNum","parseFloat","endsWith","getImgObjectFitStyle","objectFit","objectPosition","widthRatio","heightRatio","max","posLeft","posTop","split","posX","posY","getDivImgStyle","backgroundPosition","backgroundSize","sizeW","sizeH","sizeWidth","sizeHeight","SRC_SVG_REGEX","getStyleModalImg","hasZoomImg","imgSrc","isSvg","isZoomed","loadedImgEl","shouldRefresh","targetEl","slice","test","imgRect","getBoundingClientRect","targetElComputedStyle","isDivImg","isImgObjectFit","styleImgRegular","naturalWidth","styleImgObjectFit","styleDivImg","style","Object","assign","viewportX","viewportY","childCenterX","String","childCenterY","translateX","translateY","transitionDuration","getStyleGhost","parentEl","parentElement","rect","parentRect","offsetHeight","offsetLeft","offsetWidth","offsetTop","adjustSvgIDs","svgEl","newIdSuffix","attrs","idMap","Map","hasAttribute","oldId","id","newId","set","querySelectorAll","forEach","urlOldID","urlNewID","attrsQuery","map","attr","join","usedEl","setAttribute","styleEl","textContent","replaceAll","IMAGE_QUERY","x","defaultBodyAttrs","overflow","Controlled","props","ControlledBase","Component","constructor","arguments","state","isZoomImgLoaded","modalState","styleGhost","refContent","createRef","refDialog","refModalContent","refModalImg","refWrap","isScaling","prevBodyAttrs","styleModalImg","handleModalStateChange","prevModalState","loadZoomImg","addEventListener","handleResize","passive","handleTouchStart","handleTouchMove","handleTouchEnd","handleTouchCancel","document","handleKeyDown","handleWheel","ensureImgTransitionEnd","removeEventListener","bodyScrollEnable","current","handleImgTransitionEnd","close","getDialogContainer","querySelector","body","appendChild","setId","gen4","random","toString","setState","setAndTrackImg","contentEl","contentNotFoundChangeObserver","disconnect","handleImgLoad","handleZoom","imgElResizeObserver","ResizeObserver","entries","entry","target","observe","contentChangeObserver","MutationObserver","attributes","childList","subtree","handleIfZoomChanged","prevIsZoomed","zoom","unzoom","img","Image","sizes","srcset","src","setLoaded","decode","then","catch","onload","hasImage","onZoomChange","handleUnzoom","handleDialogCancel","e","preventDefault","handleDialogClick","key","keyCode","stopPropagation","ctrlKey","queueMicrotask","touches","length","changedTouches","touchYStart","screenY","browserScale","visualViewport","canSwipeToUnzoom","touchYEnd","delta","abs","swipeToUnzoomThreshold","display","bodyScrollDisable","showModal","clearTimeout","timeoutTransitionEnd","td","tdFloat","tdMs","setTimeout","clientWidth","zoomImg","zoomImgSrc","srcSet","UNSAFE_handleSvg","cloneNode","firstChild","remove","render","a11yNameButtonUnzoom","a11yNameButtonZoom","children","classDialog","IconUnzoom","IconZoom","wrapElement","WrapElement","ZoomContent","zoomMargin","idModal","idModalImg","isDiv","isImg","imgAlt","imgSizes","imgSrcSet","labelBtnZoom","isModalActive","dataContentState","dataOverlayState","styleContent","visibility","modalContent","modalImg","ref","modalBtnUnzoom","onClick","buttonUnzoom","onUnzoom","Fragment","createPortal","className","onClose","onCancel","role","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","prevState","defaultProps","Uncontrolled","setIsZoomed","useState","default"],"sources":["D:/react2/minimalin/node_modules/react-medium-image-zoom/dist/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction ICompress() {\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-unzoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M 14.144531 1.148438 L 9 6.292969 L 9 3 L 8 3 L 8 8 L 13 8 L 13 7 L 9.707031 7 L 14.855469 1.851563 Z M 8 8 L 3 8 L 3 9 L 6.292969 9 L 1.148438 14.144531 L 1.851563 14.855469 L 7 9.707031 L 7 13 L 8 13 Z\" })));\n}\nfunction IEnlarge() {\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-zoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M 9 1 L 9 2 L 12.292969 2 L 2 12.292969 L 2 9 L 1 9 L 1 14 L 6 14 L 6 13 L 2.707031 13 L 13 2.707031 L 13 6 L 14 6 L 14 1 Z\" })));\n}\n\nconst testElType = (type, el) => type === el?.tagName?.toUpperCase?.();\nconst testDiv = (el) => testElType('DIV', el) || testElType('SPAN', el);\nconst testImg = (el) => testElType('IMG', el);\nconst testImgLoaded = (el) => el.complete && el.naturalHeight !== 0;\nconst testSvg = (el) => testElType('SVG', el);\nconst getScaleToWindow = ({ height, offset, width }) => {\n    return Math.min((window.innerWidth - offset * 2) / width, (window.innerHeight - offset * 2) / height);\n};\nconst getScaleToWindowMax = ({ containerHeight, containerWidth, offset, targetHeight, targetWidth, }) => {\n    const scale = getScaleToWindow({\n        height: targetHeight,\n        offset,\n        width: targetWidth,\n    });\n    const ratio = targetWidth > targetHeight\n        ? targetWidth / containerWidth\n        : targetHeight / containerHeight;\n    return scale > 1 ? ratio : scale * ratio;\n};\nconst getScale = ({ containerHeight, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    if (!containerHeight || !containerWidth) {\n        return 1;\n    }\n    return !hasScalableSrc && targetHeight && targetWidth\n        ? getScaleToWindowMax({\n            containerHeight,\n            containerWidth,\n            offset,\n            targetHeight,\n            targetWidth,\n        })\n        : getScaleToWindow({\n            height: containerHeight,\n            offset,\n            width: containerWidth,\n        });\n};\nconst URL_REGEX = /url(?:\\(['\"]?)(.*?)(?:['\"]?\\))/;\nconst getImgSrc = (imgEl) => {\n    if (imgEl) {\n        if (testImg(imgEl)) {\n            return imgEl.currentSrc;\n        }\n        else if (testDiv(imgEl)) {\n            const bgImg = window.getComputedStyle(imgEl).backgroundImage;\n            if (bgImg) {\n                return URL_REGEX.exec(bgImg)?.[1];\n            }\n        }\n    }\n};\nconst getImgAlt = (imgEl) => {\n    if (imgEl) {\n        if (testImg(imgEl)) {\n            return imgEl.alt ?? undefined;\n        }\n        else {\n            return imgEl.getAttribute('aria-label') ?? undefined;\n        }\n    }\n};\nconst getImgRegularStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    const scale = getScale({\n        containerHeight,\n        containerWidth,\n        hasScalableSrc,\n        offset,\n        targetHeight,\n        targetWidth,\n    });\n    return {\n        top: containerTop,\n        left: containerLeft,\n        width: containerWidth * scale,\n        height: containerHeight * scale,\n        transform: `translate(0,0) scale(${1 / scale})`,\n    };\n};\nconst parsePosition = ({ position, relativeNum }) => {\n    const positionNum = parseFloat(position);\n    return position.endsWith('%')\n        ? relativeNum * positionNum / 100\n        : positionNum;\n};\nconst getImgObjectFitStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, objectFit, objectPosition, offset, targetHeight, targetWidth, }) => {\n    if (objectFit === 'scale-down') {\n        if (targetWidth <= containerWidth && targetHeight <= containerHeight) {\n            objectFit = 'none';\n        }\n        else {\n            objectFit = 'contain';\n        }\n    }\n    if (objectFit === 'cover' || objectFit === 'contain') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = objectFit === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (objectFit === 'none') {\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\n        const scale = getScale({\n            containerHeight: targetHeight,\n            containerWidth: targetWidth,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * scale,\n            height: targetHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (objectFit === 'fill') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = Math.max(widthRatio, heightRatio);\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            width: containerWidth * scale,\n            height: containerHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else {\n        return {};\n    }\n};\nconst getDivImgStyle = ({ backgroundPosition, backgroundSize, containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    if (backgroundSize === 'cover' || backgroundSize === 'contain') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = backgroundSize === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (backgroundSize === 'auto') {\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\n        const scale = getScale({\n            containerHeight: targetHeight,\n            containerWidth: targetWidth,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * scale,\n            height: targetHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else {\n        const [sizeW = '50%', sizeH = '50%'] = backgroundSize.split(' ');\n        const sizeWidth = parsePosition({ position: sizeW, relativeNum: containerWidth });\n        const sizeHeight = parsePosition({ position: sizeH, relativeNum: containerHeight });\n        const widthRatio = sizeWidth / targetWidth;\n        const heightRatio = sizeHeight / targetHeight;\n        const ratio = Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n};\nconst SRC_SVG_REGEX = /\\.svg$/i;\nconst getStyleModalImg = ({ hasZoomImg, imgSrc, isSvg, isZoomed, loadedImgEl, offset, shouldRefresh, targetEl, }) => {\n    const hasScalableSrc = isSvg ||\n        imgSrc?.slice?.(0, 18) === 'data:image/svg+xml' ||\n        hasZoomImg ||\n        !!(imgSrc && SRC_SVG_REGEX.test(imgSrc));\n    const imgRect = targetEl.getBoundingClientRect();\n    const targetElComputedStyle = window.getComputedStyle(targetEl);\n    const isDivImg = loadedImgEl != null && testDiv(targetEl);\n    const isImgObjectFit = loadedImgEl != null && !isDivImg;\n    const styleImgRegular = getImgRegularStyle({\n        containerHeight: imgRect.height,\n        containerLeft: imgRect.left,\n        containerTop: imgRect.top,\n        containerWidth: imgRect.width,\n        hasScalableSrc,\n        offset,\n        targetHeight: loadedImgEl?.naturalHeight || imgRect.height,\n        targetWidth: loadedImgEl?.naturalWidth || imgRect.width,\n    });\n    const styleImgObjectFit = isImgObjectFit\n        ? getImgObjectFitStyle({\n            containerHeight: imgRect.height,\n            containerLeft: imgRect.left,\n            containerTop: imgRect.top,\n            containerWidth: imgRect.width,\n            hasScalableSrc,\n            objectFit: targetElComputedStyle.objectFit,\n            objectPosition: targetElComputedStyle.objectPosition,\n            offset,\n            targetHeight: loadedImgEl?.naturalHeight || imgRect.height,\n            targetWidth: loadedImgEl?.naturalWidth || imgRect.width,\n        })\n        : undefined;\n    const styleDivImg = isDivImg\n        ? getDivImgStyle({\n            backgroundPosition: targetElComputedStyle.backgroundPosition,\n            backgroundSize: targetElComputedStyle.backgroundSize,\n            containerHeight: imgRect.height,\n            containerLeft: imgRect.left,\n            containerTop: imgRect.top,\n            containerWidth: imgRect.width,\n            hasScalableSrc,\n            offset,\n            targetHeight: loadedImgEl?.naturalHeight || imgRect.height,\n            targetWidth: loadedImgEl?.naturalWidth || imgRect.width,\n        })\n        : undefined;\n    const style = Object.assign({}, styleImgRegular, styleImgObjectFit, styleDivImg);\n    if (isZoomed) {\n        const viewportX = window.innerWidth / 2;\n        const viewportY = window.innerHeight / 2;\n        const childCenterX = parseFloat(String(style.left || 0)) + (parseFloat(String(style.width || 0)) / 2);\n        const childCenterY = parseFloat(String(style.top || 0)) + (parseFloat(String(style.height || 0)) / 2);\n        const translateX = viewportX - childCenterX;\n        const translateY = viewportY - childCenterY;\n        if (shouldRefresh) {\n            style.transitionDuration = '0.01ms';\n        }\n        style.transform = `translate(${translateX}px,${translateY}px) scale(1)`;\n    }\n    return style;\n};\nconst getStyleGhost = (imgEl) => {\n    if (!imgEl) {\n        return {};\n    }\n    if (testSvg(imgEl)) {\n        const parentEl = imgEl.parentElement;\n        const rect = imgEl.getBoundingClientRect();\n        if (parentEl) {\n            const parentRect = parentEl.getBoundingClientRect();\n            return {\n                height: rect.height,\n                left: parentRect.left - rect.left,\n                top: parentRect.top - rect.top,\n                width: rect.width,\n            };\n        }\n        else {\n            return {\n                height: rect.height,\n                left: rect.left,\n                width: rect.width,\n                top: rect.top,\n            };\n        }\n    }\n    else {\n        return {\n            height: imgEl.offsetHeight,\n            left: imgEl.offsetLeft,\n            width: imgEl.offsetWidth,\n            top: imgEl.offsetTop,\n        };\n    }\n};\nconst adjustSvgIDs = (svgEl) => {\n    const newIdSuffix = '-zoom';\n    const attrs = [\n        'clip-path',\n        'fill',\n        'mask',\n        'marker-start',\n        'marker-mid',\n        'marker-end',\n    ];\n    const idMap = new Map();\n    if (svgEl.hasAttribute('id')) {\n        const oldId = svgEl.id;\n        const newId = oldId + newIdSuffix;\n        idMap.set(oldId, newId);\n        svgEl.id = newId;\n    }\n    svgEl.querySelectorAll('[id]').forEach(el => {\n        const oldId = el.id;\n        const newId = oldId + newIdSuffix;\n        idMap.set(oldId, newId);\n        el.id = newId;\n    });\n    idMap.forEach((newId, oldId) => {\n        const urlOldID = `url(#${oldId})`;\n        const urlNewID = `url(#${newId})`;\n        const attrsQuery = attrs.map(attr => `[${attr}=\"${urlOldID}\"]`).join(', ');\n        svgEl.querySelectorAll(attrsQuery).forEach(usedEl => {\n            attrs.forEach(attr => {\n                if (usedEl.getAttribute(attr) === urlOldID) {\n                    usedEl.setAttribute(attr, urlNewID);\n                }\n            });\n        });\n    });\n    svgEl.querySelectorAll('style').forEach(styleEl => {\n        idMap.forEach((newId, oldId) => {\n            if (styleEl.textContent) {\n                styleEl.textContent = styleEl.textContent.replaceAll(`#${oldId}`, `#${newId}`);\n            }\n        });\n    });\n};\n\nconst IMAGE_QUERY = ['img', 'svg', '[role=\"img\"]', '[data-zoom]']\n    .map(x => `${x}:not([aria-hidden=\"true\"])`)\n    .join(',');\nconst defaultBodyAttrs = {\n    overflow: '',\n    width: '',\n};\nfunction Controlled(props) {\n    return React.createElement(ControlledBase, { ...props });\n}\nclass ControlledBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            id: '',\n            isZoomImgLoaded: false,\n            loadedImgEl: undefined,\n            modalState: \"UNLOADED\",\n            shouldRefresh: false,\n            styleGhost: {},\n        };\n        this.refContent = React.createRef();\n        this.refDialog = React.createRef();\n        this.refModalContent = React.createRef();\n        this.refModalImg = React.createRef();\n        this.refWrap = React.createRef();\n        this.imgEl = null;\n        this.isScaling = false;\n        this.prevBodyAttrs = defaultBodyAttrs;\n        this.styleModalImg = {};\n        this.handleModalStateChange = (prevModalState) => {\n            const { modalState } = this.state;\n            if (prevModalState !== \"LOADING\" && modalState === \"LOADING\") {\n                this.loadZoomImg();\n                window.addEventListener('resize', this.handleResize, { passive: true });\n                window.addEventListener('touchstart', this.handleTouchStart, { passive: true });\n                window.addEventListener('touchmove', this.handleTouchMove, { passive: true });\n                window.addEventListener('touchend', this.handleTouchEnd, { passive: true });\n                window.addEventListener('touchcancel', this.handleTouchCancel, { passive: true });\n                document.addEventListener('keydown', this.handleKeyDown, true);\n            }\n            else if (prevModalState !== \"LOADED\" && modalState === \"LOADED\") {\n                window.addEventListener('wheel', this.handleWheel, { passive: true });\n            }\n            else if (prevModalState !== \"UNLOADING\" && modalState === \"UNLOADING\") {\n                this.ensureImgTransitionEnd();\n                window.removeEventListener('wheel', this.handleWheel);\n                window.removeEventListener('touchstart', this.handleTouchStart);\n                window.removeEventListener('touchmove', this.handleTouchMove);\n                window.removeEventListener('touchend', this.handleTouchEnd);\n                window.removeEventListener('touchcancel', this.handleTouchCancel);\n                document.removeEventListener('keydown', this.handleKeyDown, true);\n            }\n            else if (prevModalState !== \"UNLOADED\" && modalState === \"UNLOADED\") {\n                this.bodyScrollEnable();\n                window.removeEventListener('resize', this.handleResize);\n                this.refModalImg.current?.removeEventListener?.('transitionend', this.handleImgTransitionEnd);\n                this.refDialog.current?.close?.();\n            }\n        };\n        this.getDialogContainer = () => {\n            let el = document.querySelector('[data-rmiz-portal]');\n            if (el == null) {\n                el = document.createElement('div');\n                el.setAttribute('data-rmiz-portal', '');\n                document.body.appendChild(el);\n            }\n            return el;\n        };\n        this.setId = () => {\n            const gen4 = () => Math.random().toString(16).slice(-4);\n            this.setState({ id: gen4() + gen4() + gen4() });\n        };\n        this.setAndTrackImg = () => {\n            const contentEl = this.refContent.current;\n            if (!contentEl)\n                return;\n            this.imgEl = contentEl.querySelector(IMAGE_QUERY);\n            if (this.imgEl) {\n                this.contentNotFoundChangeObserver?.disconnect?.();\n                this.imgEl.addEventListener('load', this.handleImgLoad);\n                this.imgEl.addEventListener('click', this.handleZoom);\n                if (!this.state.loadedImgEl) {\n                    this.handleImgLoad();\n                }\n                this.imgElResizeObserver = new ResizeObserver(entries => {\n                    const entry = entries[0];\n                    if (entry?.target) {\n                        this.imgEl = entry.target;\n                        this.setState({ styleGhost: getStyleGhost(this.imgEl) });\n                    }\n                });\n                this.imgElResizeObserver.observe(this.imgEl);\n                if (!this.contentChangeObserver) {\n                    this.contentChangeObserver = new MutationObserver(() => {\n                        this.setState({ styleGhost: getStyleGhost(this.imgEl) });\n                    });\n                    this.contentChangeObserver.observe(contentEl, { attributes: true, childList: true, subtree: true });\n                }\n            }\n            else if (!this.contentNotFoundChangeObserver) {\n                this.contentNotFoundChangeObserver = new MutationObserver(this.setAndTrackImg);\n                this.contentNotFoundChangeObserver.observe(contentEl, { childList: true, subtree: true });\n            }\n        };\n        this.handleIfZoomChanged = (prevIsZoomed) => {\n            const { isZoomed } = this.props;\n            if (!prevIsZoomed && isZoomed) {\n                this.zoom();\n            }\n            else if (prevIsZoomed && !isZoomed) {\n                this.unzoom();\n            }\n        };\n        this.handleImgLoad = () => {\n            const imgSrc = getImgSrc(this.imgEl);\n            if (!imgSrc)\n                return;\n            const img = new Image();\n            if (testImg(this.imgEl)) {\n                img.sizes = this.imgEl.sizes;\n                img.srcset = this.imgEl.srcset;\n            }\n            img.src = imgSrc;\n            const setLoaded = () => {\n                this.setState({\n                    loadedImgEl: img,\n                    styleGhost: getStyleGhost(this.imgEl),\n                });\n            };\n            img\n                .decode()\n                .then(setLoaded)\n                .catch(() => {\n                if (testImgLoaded(img)) {\n                    setLoaded();\n                    return;\n                }\n                img.onload = setLoaded;\n            });\n        };\n        this.handleZoom = () => {\n            if (this.hasImage()) {\n                this.props.onZoomChange?.(true);\n            }\n        };\n        this.handleUnzoom = () => {\n            this.props.onZoomChange?.(false);\n        };\n        this.handleDialogCancel = (e) => {\n            e.preventDefault();\n        };\n        this.handleDialogClick = (e) => {\n            if (e.target === this.refModalContent.current || e.target === this.refModalImg.current) {\n                this.handleUnzoom();\n            }\n        };\n        this.handleKeyDown = (e) => {\n            if (e.key === 'Escape' || e.keyCode === 27) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.handleUnzoom();\n            }\n        };\n        this.handleWheel = (e) => {\n            if (e.ctrlKey)\n                return;\n            e.stopPropagation();\n            queueMicrotask(() => {\n                this.handleUnzoom();\n            });\n        };\n        this.handleTouchStart = (e) => {\n            if (e.touches.length > 1) {\n                this.isScaling = true;\n                return;\n            }\n            if (e.changedTouches.length === 1 && e.changedTouches[0]) {\n                this.touchYStart = e.changedTouches[0].screenY;\n            }\n        };\n        this.handleTouchMove = (e) => {\n            const browserScale = window.visualViewport?.scale ?? 1;\n            if (this.props.canSwipeToUnzoom &&\n                !this.isScaling &&\n                browserScale <= 1 && this.touchYStart != null &&\n                e.changedTouches[0]) {\n                this.touchYEnd = e.changedTouches[0].screenY;\n                const max = Math.max(this.touchYStart, this.touchYEnd);\n                const min = Math.min(this.touchYStart, this.touchYEnd);\n                const delta = Math.abs(max - min);\n                if (delta > this.props.swipeToUnzoomThreshold) {\n                    this.touchYStart = undefined;\n                    this.touchYEnd = undefined;\n                    this.handleUnzoom();\n                }\n            }\n        };\n        this.handleTouchEnd = () => {\n            this.isScaling = false;\n            this.touchYStart = undefined;\n            this.touchYEnd = undefined;\n        };\n        this.handleTouchCancel = () => {\n            this.isScaling = false;\n            this.touchYStart = undefined;\n            this.touchYEnd = undefined;\n        };\n        this.handleResize = () => {\n            this.setState({ shouldRefresh: true });\n        };\n        this.hasImage = () => {\n            return this.imgEl &&\n                (this.state.loadedImgEl || testSvg(this.imgEl)) &&\n                window.getComputedStyle(this.imgEl).display !== 'none';\n        };\n        this.zoom = () => {\n            this.bodyScrollDisable();\n            this.refDialog.current?.showModal?.();\n            this.refModalImg.current?.addEventListener?.('transitionend', this.handleImgTransitionEnd);\n            this.setState({ modalState: \"LOADING\" });\n        };\n        this.unzoom = () => {\n            this.setState({ modalState: \"UNLOADING\" });\n        };\n        this.handleImgTransitionEnd = () => {\n            clearTimeout(this.timeoutTransitionEnd);\n            if (this.state.modalState === \"LOADING\") {\n                this.setState({ modalState: \"LOADED\" });\n            }\n            else if (this.state.modalState === \"UNLOADING\") {\n                this.setState({ shouldRefresh: false, modalState: \"UNLOADED\" });\n            }\n        };\n        this.ensureImgTransitionEnd = () => {\n            if (this.refModalImg.current) {\n                const td = window.getComputedStyle(this.refModalImg.current).transitionDuration;\n                const tdFloat = parseFloat(td);\n                if (tdFloat) {\n                    const tdMs = tdFloat * (td.endsWith('ms') ? 1 : 1000) + 50;\n                    this.timeoutTransitionEnd = setTimeout(this.handleImgTransitionEnd, tdMs);\n                }\n            }\n        };\n        this.bodyScrollDisable = () => {\n            this.prevBodyAttrs = {\n                overflow: document.body.style.overflow,\n                width: document.body.style.width,\n            };\n            const clientWidth = document.body.clientWidth;\n            document.body.style.overflow = 'hidden';\n            document.body.style.width = `${clientWidth}px`;\n        };\n        this.bodyScrollEnable = () => {\n            document.body.style.width = this.prevBodyAttrs.width;\n            document.body.style.overflow = this.prevBodyAttrs.overflow;\n            this.prevBodyAttrs = defaultBodyAttrs;\n        };\n        this.loadZoomImg = () => {\n            const { props: { zoomImg } } = this;\n            const zoomImgSrc = zoomImg?.src;\n            if (zoomImgSrc) {\n                const img = new Image();\n                img.sizes = zoomImg?.sizes ?? '';\n                img.srcset = zoomImg?.srcSet ?? '';\n                img.src = zoomImgSrc;\n                const setLoaded = () => {\n                    this.setState({ isZoomImgLoaded: true });\n                };\n                img\n                    .decode()\n                    .then(setLoaded)\n                    .catch(() => {\n                    if (testImgLoaded(img)) {\n                        setLoaded();\n                        return;\n                    }\n                    img.onload = setLoaded;\n                });\n            }\n        };\n        this.UNSAFE_handleSvg = () => {\n            const { imgEl, refModalImg, styleModalImg } = this;\n            if (testSvg(imgEl)) {\n                const svgEl = imgEl.cloneNode(true);\n                adjustSvgIDs(svgEl);\n                svgEl.style.width = `${styleModalImg.width || 0}px`;\n                svgEl.style.height = `${styleModalImg.height || 0}px`;\n                svgEl.addEventListener('click', this.handleUnzoom);\n                refModalImg.current?.firstChild?.remove?.();\n                refModalImg.current?.appendChild?.(svgEl);\n            }\n        };\n    }\n    render() {\n        const { handleDialogCancel, handleDialogClick, handleUnzoom, handleZoom, imgEl, props: { a11yNameButtonUnzoom, a11yNameButtonZoom, children, classDialog, IconUnzoom, IconZoom, isZoomed, wrapElement: WrapElement, ZoomContent, zoomImg, zoomMargin, }, refContent, refDialog, refModalContent, refModalImg, refWrap, state: { id, isZoomImgLoaded, loadedImgEl, modalState, shouldRefresh, styleGhost, }, } = this;\n        const idModal = `rmiz-modal-${id}`;\n        const idModalImg = `rmiz-modal-img-${id}`;\n        const isDiv = testDiv(imgEl);\n        const isImg = testImg(imgEl);\n        const isSvg = testSvg(imgEl);\n        const imgAlt = getImgAlt(imgEl);\n        const imgSrc = getImgSrc(imgEl);\n        const imgSizes = isImg ? imgEl.sizes : undefined;\n        const imgSrcSet = isImg ? imgEl.srcset : undefined;\n        const hasZoomImg = !!zoomImg?.src;\n        const hasImage = this.hasImage();\n        const labelBtnZoom = imgAlt\n            ? `${a11yNameButtonZoom}: ${imgAlt}`\n            : a11yNameButtonZoom;\n        const isModalActive = modalState === \"LOADING\" ||\n            modalState === \"LOADED\";\n        const dataContentState = hasImage ? 'found' : 'not-found';\n        const dataOverlayState = modalState === \"UNLOADED\" || modalState === \"UNLOADING\"\n            ? 'hidden'\n            : 'visible';\n        const styleContent = {\n            visibility: modalState === \"UNLOADED\" ? 'visible' : 'hidden',\n        };\n        this.styleModalImg = hasImage\n            ? getStyleModalImg({\n                hasZoomImg,\n                imgSrc,\n                isSvg,\n                isZoomed: isZoomed && isModalActive,\n                loadedImgEl,\n                offset: zoomMargin,\n                shouldRefresh,\n                targetEl: imgEl,\n            })\n            : {};\n        let modalContent = null;\n        if (hasImage) {\n            const modalImg = isImg || isDiv\n                ? React.createElement(\"img\", { alt: imgAlt, sizes: imgSizes, src: imgSrc, srcSet: imgSrcSet, ...isZoomImgLoaded && modalState === \"LOADED\" ? zoomImg : {}, \"data-rmiz-modal-img\": \"\", height: this.styleModalImg.height || undefined, id: idModalImg, ref: refModalImg, style: this.styleModalImg, width: this.styleModalImg.width || undefined })\n                : isSvg\n                    ? React.createElement(\"div\", { \"data-rmiz-modal-img\": true, ref: refModalImg, style: this.styleModalImg })\n                    : null;\n            const modalBtnUnzoom = React.createElement(\"button\", { \"aria-label\": a11yNameButtonUnzoom, \"data-rmiz-btn-unzoom\": \"\", onClick: handleUnzoom, type: \"button\" },\n                React.createElement(IconUnzoom, null));\n            modalContent = ZoomContent\n                ? React.createElement(ZoomContent, { buttonUnzoom: modalBtnUnzoom, modalState: modalState, img: modalImg, onUnzoom: handleUnzoom })\n                : React.createElement(React.Fragment, null,\n                    modalImg,\n                    modalBtnUnzoom);\n        }\n        return (React.createElement(WrapElement, { \"aria-owns\": idModal, \"data-rmiz\": \"\", ref: refWrap },\n            React.createElement(WrapElement, { \"data-rmiz-content\": dataContentState, ref: refContent, style: styleContent }, children),\n            hasImage && React.createElement(WrapElement, { \"data-rmiz-ghost\": \"\", style: styleGhost },\n                React.createElement(\"button\", { \"aria-label\": labelBtnZoom, \"data-rmiz-btn-zoom\": \"\", onClick: handleZoom, type: \"button\" },\n                    React.createElement(IconZoom, null))),\n            hasImage && ReactDOM.createPortal(React.createElement(\"dialog\", { \"aria-labelledby\": idModalImg, \"aria-modal\": \"true\", className: classDialog, \"data-rmiz-modal\": \"\", id: idModal, onClick: handleDialogClick, onClose: handleUnzoom, onCancel: handleDialogCancel, ref: refDialog, role: \"dialog\" },\n                React.createElement(\"div\", { \"data-rmiz-modal-overlay\": dataOverlayState }),\n                React.createElement(\"div\", { \"data-rmiz-modal-content\": \"\", ref: refModalContent }, modalContent)), this.getDialogContainer())));\n    }\n    componentDidMount() {\n        this.setId();\n        this.setAndTrackImg();\n        this.handleImgLoad();\n        this.UNSAFE_handleSvg();\n    }\n    componentWillUnmount() {\n        if (this.state.modalState !== \"UNLOADED\") {\n            this.bodyScrollEnable();\n        }\n        this.contentChangeObserver?.disconnect?.();\n        this.contentNotFoundChangeObserver?.disconnect?.();\n        this.imgElResizeObserver?.disconnect?.();\n        this.imgEl?.removeEventListener?.('load', this.handleImgLoad);\n        this.imgEl?.removeEventListener?.('click', this.handleZoom);\n        this.refModalImg.current?.removeEventListener?.('transitionend', this.handleImgTransitionEnd);\n        window.removeEventListener('wheel', this.handleWheel);\n        window.removeEventListener('touchstart', this.handleTouchStart);\n        window.removeEventListener('touchmove', this.handleTouchMove);\n        window.removeEventListener('touchend', this.handleTouchEnd);\n        window.removeEventListener('touchcancel', this.handleTouchCancel);\n        window.removeEventListener('resize', this.handleResize);\n        document.removeEventListener('keydown', this.handleKeyDown, true);\n    }\n    componentDidUpdate(prevProps, prevState) {\n        this.handleModalStateChange(prevState.modalState);\n        this.UNSAFE_handleSvg();\n        this.handleIfZoomChanged(prevProps.isZoomed);\n    }\n}\nControlledBase.defaultProps = {\n    a11yNameButtonUnzoom: 'Minimize image',\n    a11yNameButtonZoom: 'Expand image',\n    canSwipeToUnzoom: true,\n    IconUnzoom: ICompress,\n    IconZoom: IEnlarge,\n    swipeToUnzoomThreshold: 10,\n    wrapElement: 'div',\n    zoomMargin: 0,\n};\n\nfunction Uncontrolled(props) {\n    const [isZoomed, setIsZoomed] = React.useState(false);\n    return React.createElement(Controlled, { ...props, isZoomed: isZoomed, onZoomChange: setIsZoomed });\n}\n\nexport { Controlled, Uncontrolled as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}